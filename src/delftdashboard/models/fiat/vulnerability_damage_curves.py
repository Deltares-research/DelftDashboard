# -*- coding: utf-8 -*-
"""
Created on Mon May 10 12:18:09 2021

@author: ormondt
"""

from delftdashboard.app import app
from delftdashboard.operations import map


def select(*args):
    # De-activate existing layers
    map.update()
    if all(values.data is None for key, values in app.map.layer["buildings"].layer.items()):
        app.map.layer["modelmaker_fiat"].layer[app.gui.getvar("modelmaker_fiat", "active_area_of_interest")].show()
    app.gui.setvar("_main", "show_fiat_checkbox", True)

def add_damage_curves(*args):
    # TODO: ensure that the Exposure Link column in the linking file is updated
    # Are the values below always the default values or is the updated file selected?
    selected_damage_curves = app.gui.getvar("fiat", "selected_damage_curve_database")
    selected_link_table = app.gui.getvar("fiat", "selected_damage_curve_linking_table")
    continent =         app.gui.getvar("fiat", "OSM_continent")
    if continent is not None:
        app.active_model.domain.vulnerability_vm.add_vulnerability_curves_to_model(
            selected_damage_curves, selected_link_table,continent
        )
    else:
        app.active_model.domain.vulnerability_vm.add_vulnerability_curves_to_model(
            selected_damage_curves, selected_link_table
        )
    # TODO: Check if the table on the main vulnerability tab is updated
    # to be the used damage functions

    # Check the checkbox
    app.gui.setvar("_main", "checkbox_vulnerability", True)

    app.gui.window.dialog_info(
        text="The damage functions are added to the model",
        title="Added damage functions",
    )


def edit(*args):
    app.active_model.set_model_variables()


def activate_create_curves_panel(*args):
    app.gui.setvar("fiat", "create_curves", True)


def specify_damage_curves(*args):
    app.active_model.damage_curves_specify()
